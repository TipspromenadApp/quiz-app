// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using quiz_app;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250815113855_AddQuizAnswers")]
    partial class AddQuizAnswers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("quiz_app.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OptionA")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OptionB")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OptionC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OptionD")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CorrectAnswer = "Tea",
                            OptionA = "Orange juice",
                            OptionB = "Water",
                            OptionC = "Tea",
                            OptionD = "Milk",
                            Text = "Which of these drinks usually contains caffeine?",
                            Type = "multiple"
                        },
                        new
                        {
                            Id = 2,
                            CorrectAnswer = "Seaweed",
                            OptionA = "Seaweed",
                            OptionB = "Lettuce",
                            OptionC = "Rice paper",
                            OptionD = "Plastic",
                            Text = "What is sushi traditionally wrapped in?",
                            Type = "multiple"
                        },
                        new
                        {
                            Id = 3,
                            CorrectAnswer = "Listening to calming music",
                            OptionA = "Listening to calming music",
                            OptionB = "Eating more sugar",
                            OptionC = "Skipping sleep",
                            OptionD = "Arguing online",
                            Text = "Which of these is a common way to reduce stress?",
                            Type = "multiple"
                        },
                        new
                        {
                            Id = 4,
                            CorrectAnswer = "Honey",
                            OptionA = "Honey",
                            OptionB = "Butter",
                            OptionC = "Oil",
                            OptionD = "Milk",
                            Text = "What do bees produce?",
                            Type = "multiple"
                        },
                        new
                        {
                            Id = 5,
                            CorrectAnswer = "Apple",
                            OptionA = "Apple",
                            OptionB = "Lettuce",
                            OptionC = "Carrot",
                            OptionD = "Broccoli",
                            Text = "Which of these is considered a fruit?",
                            Type = "multiple"
                        },
                        new
                        {
                            Id = 6,
                            CorrectAnswer = "France",
                            OptionA = "France",
                            OptionB = "Italy",
                            OptionC = "Germany",
                            OptionD = "Spain",
                            Text = "Which country is famous for the Eiffel Tower?",
                            Type = "multiple"
                        },
                        new
                        {
                            Id = 7,
                            CorrectAnswer = "Computer",
                            OptionA = "Computer",
                            OptionB = "Microwave",
                            OptionC = "Television",
                            OptionD = "Oven",
                            Text = "What do you use to send an email?",
                            Type = "multiple"
                        },
                        new
                        {
                            Id = 8,
                            CorrectAnswer = "Sunlight",
                            OptionA = "Sunlight",
                            OptionB = "Darkness",
                            OptionC = "Plastic",
                            OptionD = "Smoke",
                            Text = "What helps plants grow?",
                            Type = "multiple"
                        },
                        new
                        {
                            Id = 9,
                            CorrectAnswer = "Guitar",
                            OptionA = "Guitar",
                            OptionB = "Plate",
                            OptionC = "Chair",
                            OptionD = "Spoon",
                            Text = "Which one is a musical instrument?",
                            Type = "multiple"
                        },
                        new
                        {
                            Id = 10,
                            CorrectAnswer = "Cereal",
                            OptionA = "Cereal",
                            OptionB = "Pizza",
                            OptionC = "Steak",
                            OptionD = "Popcorn",
                            Text = "What is a common breakfast food?",
                            Type = "multiple"
                        });
                });

            modelBuilder.Entity("quiz_app.Models.QuizAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CorrectAnswer")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuizResultId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Round")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SelectedAnswer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserAnswer")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuizResultId");

                    b.ToTable("QuizAnswers");
                });

            modelBuilder.Entity("quiz_app.Models.QuizResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTaken")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoundNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalQuestions")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("QuizResults");
                });

            modelBuilder.Entity("quiz_app.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("quiz_app.Models.QuizAnswer", b =>
                {
                    b.HasOne("quiz_app.Models.QuizResult", "QuizResult")
                        .WithMany("Answers")
                        .HasForeignKey("QuizResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuizResult");
                });

            modelBuilder.Entity("quiz_app.Models.QuizResult", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
